version: '3.8'

services:
  db:
    container_name: mysql_database
    restart: always
    image: mysql:latest
    environment:
      - MYSQL_USER=restuwahyu13
      - MYSQL_PASSWORD=restuwahyu13
      - MYSQL_DB=payment
    volumes:
      - pgdata:/var/lib/postgresql/data
    ports:
      - 5432:5432
    networks:
      express_network:

  web:
     container_name: express_app
    restart: on-failure
    build:
      context: .
      dockerfile: Dockerfile.dev
    depends_on:
      - db
    volumes:
      - .:/app
      - /app/node_modules
    ports:
      - 3000:3000
    networks:
      express_network
  datadog-agent:
    image: datadog/agent:latest
    ports:
      - 8126:8126
      - 8125:8125/udp
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /proc/:/host/proc/:ro
      - /sys/fs/cgroup:/host/sys/fs/cgroup:ro
    environment:
      DOCKER_CONTENT_TRUST: 1
      DD_API_KEY: ${DD_API_KEY}
      DD_SITE: datadoghq.com
      DD_APM_ENABLED: 'true'
      DD_DOGSTATSD_NON_LOCAL_TRAFFIC: 'true'

  localstack:
    container_name: '${LOCALSTACK_DOCKER_NAME-localstack_main}'
    image: localstack/localstack
    network_mode: bridge
    ports:
      - '127.0.0.1:4510-4559:4510-4559' # external service port range
      - '127.0.0.1:4566:4566' # LocalStack Edge Proxy
    environment:
      - DEBUG=${DEBUG-}
      - DATA_DIR=${DATA_DIR-}
      - LAMBDA_EXECUTOR=${LAMBDA_EXECUTOR-}
      - LOCALSTACK_API_KEY=${LOCALSTACK_API_KEY-} # only required for Pro
      - HOST_TMP_FOLDER=${TMPDIR:-/tmp/}localstack
      - DOCKER_HOST=unix:///var/run/docker.sock
    volumes:
      - '${TMPDIR:-/tmp}/localstack:/tmp/localstack'
      - '/var/run/docker.sock:/var/run/docker.sock'
